<?php

/**
 * @file
 * Primary module hooks for news module.
 */
/**
 * Implements hook_views_data().
 */
function news_views_data()
{
  $data = [];
  $data['news_subs'] = [];

  // Опишите одну таблицу базы данных с именем News_Subs.
  $data['news_subs']['table'] = [
    // Человеческое читаемое название этой таблицы, используемое в пользовательском интерфейсе Views для префикса,
    // Фильтры и т. Д. Пример: «Новости подписки: электронная почта».Эта строка должна
    // быть переводимым.
    'group' => t('News subscriptions'),

    // Название модуля, который обеспечивает табличную схему.
    'provider' => 'news',

    // таблица может быть «базовой» таблицей, что означает, что в представлениях вы можете использовать ее как
    // база для вида.Не базовые таблицы могут быть связаны с базовой таблицей через
    // отношения.Основная таблица для ваших пользовательских данных должна быть базой
    // Таблица.Добавьте ключ «базовый» со следующими свойствами:
    'base' =>  [
      // Идентификатор (первичное) поле в этой таблице для представлений.
      'field' => 'email',
      // Метка в пользовательском интерфейсе.
      'title' => t('News subscriptions'),
      // Более длинное описание в пользовательском интерфейсе.Необходимый.
      'help' => t('News subscriptions custom table'),
    ]
  ];

  // другие элементы высшего уровня массива News_subs определяют индивидуальность
  // столбцы таблицы, которые вы хотите сделать доступными для представлений.Ключ
  // имя (и должно быть уникальным) используется представлениями.Обычно это то же самое, что и
  // Имя столбца базы данных, которое он описывает.Но не должно быть.Это
  // возможно создать вычислительные поля, которые не являются отношениями один на один
  // к столбцу в базе данных.Например, поле, которое содержит ссылку на
  // редактировать запись из таблицы.
  //
  //Требуются элементы «названия» и «справки».
  //
  //Каждое определение поля должно описать плагины представлений (часто
  // называют «обработчиками»), которые отвечают за обработку данных поля в
  // различные сценарии, включая: поле, фильтр, сортировка, аргумент, область и
  // отношение.Все это необязательно.
  $data['news_subs']['email'] = [
    // Human readable name of the field that will be displayed in the UI.
    'title' => t('Email'),
    // Required help text that describes the content of the field.
    'help' => t('Subscription email.'),
    // Необязательный обработчик для использования при отображении поля.Это отображает, какой пользователь
    // увидит в разделе «Поля» пользовательского интерфейса конфигурации представлений.Уточнить
    // это, если вы хотите, чтобы пользователь мог отображать содержимое этого поля.
    'field' => [
      // Идентификатор плагина поля обработчика для использования.Более подробную информацию об этом ниже.
      'id' => 'standard',
    ],
    // Необязательный обработчик для использования при сортировке данных поля.Это отображает, какой пользователь
    // увидит в разделе «Критерии сортировки» пользовательского интерфейса конфигурации представлений.
    // укажите это, если вы хотите, чтобы пользователь мог сортировать представления на основе результатов
    // В содержании этого поля.
    'sort' => [
      'id' => 'standard',
    ],
    // Необязательный обработчик для использования при фильтрации результатов на основе поля.Этот
    // Карты на то, что пользователь увидит в разделе «Критерии фильтра»
    // Просмотры конфигурации пользовательского интерфейса.Укажите это, если вы хотите, чтобы пользователь имел возможность
    // Отфильтруйте представления результаты на основе содержания этого поля.
    'filter' => [
      'id' => 'string',
    ],
    // Необязательный обработчик для использования при предоставлении этого поля доступным в качестве аргумента.
    // это отображает то, что пользователь увидит в разделе «Контекстуальные фильтры»
    // Конфигурация конфигурации представлений.Укажите это, если вы хотите, чтобы пользователь имел возможность
    // Используйте это поле в контекстных фильтрах.
    'argument' => [
      'id' => 'string',
    ],
  ];

  // Больше примеров полевых описаний.
  $data['news_subs']['first_name'] = [
    'title' => t('First name'),
    'help' => t('Subscriber\'s first name.'),
    'field' => [
      'id' => 'standard',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'string',
    ],
    'argument' => [
      'id' => 'string',
    ],
  ];

  $data['news_subs']['last_name'] = [
    'title' => t('Last name'),
    'help' => t('Subscriber\'s last name.'),
    'field' => [
      'id' => 'standard',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'string',
    ],
    'argument' => [
      'id' => 'string',
    ],
  ];

  $data['news_subs']['created'] = [
    'title' => t('Created'),
    'help' => t('Subscription date'),
    'field' => [
      'id' => 'date',
    ],
    'sort' => [
      'id' => 'date',
    ],
    'filter' => [
      'id' => 'date',
    ],
    'argument' => [
      'id' => 'date',
    ],
  ];

  $data['news_subs']['is_active'] = [
    'title' => t('Is Active?'),
    'help' => t('Is it an active subscriber?'),
    'field' => [
      'id' => 'boolean',
    ],
    'sort' => [
      'id' => 'numeric',
    ],
    'filter' => [
      'id' => 'boolean',
    ],
    'argument' => [
      'id' => 'standard',
    ],
  ];
  return $data;
}
